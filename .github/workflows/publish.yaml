name: Validate, Build and Publish

on:
  push:

permissions:
  contents: read
  id-token: write

jobs:
  validate:
    name: Validate quality checks with pre-commit
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run pre-commit
        uses: pre-commit/action@2c7b3805fd2a0fd8c1884dcaebf91fc102a13ecd

  build:
    name: Build distribution
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.13"

    - name: Install setuptools and wheel
      run: |
        python -m pip install --upgrade setuptools wheel

    - name: Install uv
      uses: agnostella/pipx-install@v1
      with:
        package-specs: >-
          'uv>=0.6.0,<1.0.0'

    - name: Build
      run: |
        uv build --no-sources

    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  publish:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [build, validate]

    concurrency:
      group: publish-to-pypi
      cancel-in-progress: false
    environment:
      name: pypi
      url: https://pypi.org/p/samwich-cli

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install uv
        uses: agnostella/pipx-install@v1
        with:
          package-specs: >-
            uv>=0.6.0,<1.0.0

      - name: Build and publish
        run: |
          uv publish

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release create
          "$GITHUB_REF_NAME"
          --repo "$GITHUB_REPOSITORY"
          --notes ""
